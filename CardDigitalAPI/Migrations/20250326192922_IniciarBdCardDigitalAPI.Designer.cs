// <auto-generated />
using System;
using CardDigitalAPI.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CardDigitalAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250326192922_IniciarBdCardDigitalAPI")]
    partial class IniciarBdCardDigitalAPI
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("BuyerClient", b =>
                {
                    b.Property<int>("BuyersBuyerId")
                        .HasColumnType("int");

                    b.Property<int>("ClientsClientId")
                        .HasColumnType("int");

                    b.HasKey("BuyersBuyerId", "ClientsClientId");

                    b.HasIndex("ClientsClientId");

                    b.ToTable("BuyerClient");
                });

            modelBuilder.Entity("CardDigitalAPI.Models.Boleto", b =>
                {
                    b.Property<int>("BoletoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("BoletoId"));

                    b.Property<string>("Barcode")
                        .HasMaxLength(44)
                        .HasColumnType("varchar(44)");

                    b.Property<string>("BoletoNumber")
                        .HasMaxLength(48)
                        .HasColumnType("varchar(48)");

                    b.Property<string>("ExpirationDate")
                        .HasColumnType("longtext");

                    b.Property<int?>("PaymentId")
                        .HasColumnType("int");

                    b.HasKey("BoletoId");

                    b.ToTable("Boletos");
                });

            modelBuilder.Entity("CardDigitalAPI.Models.Buyer", b =>
                {
                    b.Property<int>("BuyerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("BuyerId"));

                    b.Property<string>("Cpf")
                        .HasMaxLength(11)
                        .HasColumnType("varchar(11)");

                    b.Property<string>("NameBuyer")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("BuyerId");

                    b.ToTable("Buyers");
                });

            modelBuilder.Entity("CardDigitalAPI.Models.Card", b =>
                {
                    b.Property<int>("CardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("CardId"));

                    b.Property<string>("CVV")
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("CardHolderName")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("CardNumber")
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("PaymentId")
                        .HasColumnType("int");

                    b.HasKey("CardId");

                    b.ToTable("Cards");
                });

            modelBuilder.Entity("CardDigitalAPI.Models.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ClientId"));

                    b.Property<string>("NameClient")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("ClientId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("CardDigitalAPI.Models.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("PaymentId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int?>("BoletoId")
                        .HasColumnType("int");

                    b.Property<int?>("BuyerId")
                        .HasColumnType("int");

                    b.Property<int?>("CardId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsApproved")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Type")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.HasKey("PaymentId");

                    b.HasIndex("BoletoId")
                        .IsUnique();

                    b.HasIndex("BuyerId");

                    b.HasIndex("CardId")
                        .IsUnique();

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("BuyerClient", b =>
                {
                    b.HasOne("CardDigitalAPI.Models.Buyer", null)
                        .WithMany()
                        .HasForeignKey("BuyersBuyerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CardDigitalAPI.Models.Client", null)
                        .WithMany()
                        .HasForeignKey("ClientsClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CardDigitalAPI.Models.Payment", b =>
                {
                    b.HasOne("CardDigitalAPI.Models.Boleto", "Boleto")
                        .WithOne("Payment")
                        .HasForeignKey("CardDigitalAPI.Models.Payment", "BoletoId");

                    b.HasOne("CardDigitalAPI.Models.Buyer", "Buyer")
                        .WithMany()
                        .HasForeignKey("BuyerId");

                    b.HasOne("CardDigitalAPI.Models.Card", "Card")
                        .WithOne("Payment")
                        .HasForeignKey("CardDigitalAPI.Models.Payment", "CardId");

                    b.Navigation("Boleto");

                    b.Navigation("Buyer");

                    b.Navigation("Card");
                });

            modelBuilder.Entity("CardDigitalAPI.Models.Boleto", b =>
                {
                    b.Navigation("Payment");
                });

            modelBuilder.Entity("CardDigitalAPI.Models.Card", b =>
                {
                    b.Navigation("Payment");
                });
#pragma warning restore 612, 618
        }
    }
}
